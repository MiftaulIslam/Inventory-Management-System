// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240709102045_ExpenseFixedCreated")]
    partial class ExpenseFixedCreated
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("Domain.Entities.Models.ExpenseFixed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CostPerDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<int>("IntervalDays")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ExpenseFixed", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 1200.00m,
                            CostPerDay = 40.00m,
                            InsertDate = new DateTime(2024, 7, 9, 16, 20, 45, 481, DateTimeKind.Local).AddTicks(1958),
                            IntervalDays = 30,
                            Name = "Rent"
                        },
                        new
                        {
                            Id = 2,
                            Amount = 50.00m,
                            CostPerDay = 1.67m,
                            InsertDate = new DateTime(2024, 7, 9, 16, 20, 45, 481, DateTimeKind.Local).AddTicks(1970),
                            IntervalDays = 30,
                            Name = "Internet"
                        },
                        new
                        {
                            Id = 3,
                            Amount = 100.00m,
                            CostPerDay = 3.33m,
                            InsertDate = new DateTime(2024, 7, 9, 16, 20, 45, 481, DateTimeKind.Local).AddTicks(1972),
                            IntervalDays = 30,
                            Name = "Electricity"
                        },
                        new
                        {
                            Id = 4,
                            Amount = 300.00m,
                            CostPerDay = 0.82m,
                            InsertDate = new DateTime(2024, 7, 9, 16, 20, 45, 481, DateTimeKind.Local).AddTicks(1974),
                            IntervalDays = 365,
                            Name = "Insurance"
                        },
                        new
                        {
                            Id = 5,
                            Amount = 150.00m,
                            CostPerDay = 1.67m,
                            InsertDate = new DateTime(2024, 7, 9, 16, 20, 45, 481, DateTimeKind.Local).AddTicks(1975),
                            IntervalDays = 90,
                            Name = "Maintenance"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
